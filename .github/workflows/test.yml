name: CI Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  run:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Run test 1 
        run: echo -n "apple" | python app/main.py -E "a"

      - name: Run test 2 
        run: echo -n "apple123" | python app/main.py -E "\d"

      - name: Run test 3 
        run: echo -n "alpha-num3ric" | python app/main.py -E "\w"

      - name: Run test 4 
        run: echo -n "apple" | python app/main.py -E "[abc]"

      - name: Run test 5 
        run: |
         echo -n "apple" | python app/main.py -E "[^abc]"
         echo -n "apple" | python app/main.py -E "[^bcd]"

      - name: Run test 6 
        run: |
         echo -n "1 apple" | python app/main.py -E "\d apple"
 
      - name: Run test 7 
        run: |
         set +e  # Allow commands to fail without exiting
         echo -n "log" | python app/main.py -E "^log"
         code1=$? # $? holds the exit code of the last command that was run
         echo -n "slog" | python app/main.py -E "^log"
         code2=$?
         set -e  # Re-enable exit on error
         if [ $code1 -ne 0 ]; then
           echo "Expected exit code 0 for 'log', got $code1"
           exit 1
         fi

         if [ $code2 -ne 1 ]; then 
           echo "Expected exit code 1 for 'slog', got $code2"
           exit 1
         fi

         echo "Test passed: correct exit codes received"

      - name: Run test 8 
        run: |
         set +e  # Allow commands to fail without exiting
         echo -n "dog" | python app/main.py -E "dog$"
         code1=$? # $? holds the exit code of the last command that was run
         echo -n "dogs" | python app/main.py -E "dog$"
         code2=$?
         set -e  # Re-enable exit on error
         if [ $code1 -ne 0 ]; then
           echo "Expected exit code 0 for 'dog', got $code1"
           exit 1
         fi

         if [ $code2 -ne 1 ]; then 
           echo "Expected exit code 1 for 'dogs', got $code2"
           exit 1
         fi

         echo "Test passed: correct exit codes received"
      
      - name: Run test 9
        run: |
         set +e  # Allow commands to fail without exiting
         echo -n "caats" | python app/main.py -E "ca+ts"
         code1=$?
         echo -n "ca" | python app/main.py -E "ca+t"
         code2=$?
         set -e
         if [ $code1 -ne 0 ]; then
          echo "Expected exit code 0 for 'caats', got $code1"
          exit 1
         fi

         if [ $code2 -ne 1 ]; then 
          echo "Expected exit code 1 for 'ca', got $code2"
          exit 1
         fi

         echo "Test passed: correct exit codes received"
      
      - name: Run test 10
        run: |
         set +e  # Allow commands to fail without exiting
         echo -n "cat" | python app/main.py -E "ca?t"
         code1=$?
         echo -n "act" | python app/main.py -E "ca?t"
         code2=$?
         echo -n "dog" | python app/main.py -E "ca?t"
         code3=$?
         set -e
         if [ $code1 -ne 0 ]; then 
          echo "Expected exit code 0 for 'cat', got $code1"
          exit 1 
         fi

         if [ $code2 -ne 0 ]; then 
          echo "Expected exit code 0 for 'act', got $code2"
          exit 1
         fi

         if [ $code3 -ne 1 ]; then 
          echo "Expected exit code 1 for 'dog', got $code3"
          exit 1
         fi

         echo "Test passed: correct exit codes received"

      - name: Run test 11
        run: |
         set +e  # Allow commands to fail without exiting
         echo -n "dog" | python app/main.py -E "d.g"
         code1=$?
         echo -n "dog" | python app/main.py -E "c.g"
         code2=$?
         set -e

         if [ $code1 -ne 0 ]; then 
          echo "Expected exit code 0 for 'dog', got $code1"
          exit 1
         fi

         if [ $code2 -ne 1 ]; then 
          echo "Expected exit code 1 for 'dog', got $code2"
          exit 1
         fi
    
